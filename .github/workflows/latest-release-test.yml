on:
  workflow_dispatch:

name: discovery-engine testing the image

jobs:
  build:
    name: Create discovery engine Release
    if: github.repository == 'rksharma95/discovery-engine'
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout discovery engine code
        uses: actions/checkout@v2

      - name: Setup Enviroment
        id: vars
        run: |
          if [ ${{ github.ref }} == "refs/heads/dev" ]; then
            echo ::set-output name=tag::latest
          else 
            echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          fi
        
          # setup kubernetes environment
          ./k3s/install_k3s.sh


      - name: Generate discovery engine artifacts
        run: |
            GITHUB_SHA=$GITHUB_SHA ./src/build/build_knoxautopolicy.sh ${{ steps.vars.outputs.tag }}

      - name: Run discovery engine
        run: |
            kubectl apply -f deployments/k8s/
            kubectl get pods -A -w

#TODO: add the following tests after they are fixed
      # - name: Test discovery engine
      #   run: |
      #       ./tests/test-scenarios-local.sh ${{ steps.vars.outputs.tag }}

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_AUTHTOK }}

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #       with:
  #         platforms: linux/amd64,linux/arm64/v8

  #     - name: Push discovery engine images to Docker
  #       run: |
  #           GITHUB_SHA=$GITHUB_SHA ./src/build/push_knoxautopolicy.sh ${{ steps.vars.outputs.tag }}

  # push-stable-version:
  #   name: Create discovery engine Release - 20.04
  #   needs: build
  #   if: github.ref != 'refs/heads/dev'
  #   runs-on: ubuntu-20.04
  #   timeout-minutes: 60
  #   steps:
  #     - name: Checkout discovery engine code
  #       uses: actions/checkout@v2
  #       with:
  #         ref: dev

  #     - name: Pull Docker Hub image
  #       id: match
  #       run: |
  #           value=`cat STABLE-RELEASE`
  #           if [ ${{ github.ref }} == refs/heads/$value ]; then
  #             docker pull docker.io/accuknox/knoxautopolicy:$value
  #             docker image tag accuknox/knoxautopolicy:$value accuknox/knoxautopolicy:stable
  #             echo ::set-output name=tag::true
  #           else
  #             echo ::set-output name=tag::false
  #           fi

  #     - name: Login to Docker Hub
  #       if: steps.match.outputs.tag == 'true'
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_AUTHTOK }}

  #     - name: Push discovery engine images to Docker
  #       if: steps.match.outputs.tag == 'true'
  #       run:  GITHUB_SHA=$GITHUB_SHA STABLE_VERSION=$(cat STABLE-RELEASE) ./src/build/push_knoxautopolicy.sh stable

